{"cells":[{"cell_type":"markdown","metadata":{"toc":true,"id":"0m_Qrc2PIub0"},"source":["<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n","<div class=\"toc\"><ul class=\"toc-item\"><li><ul class=\"toc-item\"><li><span><a href=\"#Packages\" data-toc-modified-id=\"Packages-0.1\"><span class=\"toc-item-num\">0.1&nbsp;&nbsp;</span>Packages</a></span></li><li><span><a href=\"#Load-data-set\" data-toc-modified-id=\"Load-data-set-0.2\"><span class=\"toc-item-num\">0.2&nbsp;&nbsp;</span>Load data set</a></span></li></ul></li><li><span><a href=\"#Consonant-Stats\" data-toc-modified-id=\"Consonant-Stats-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;</span>Consonant Stats</a></span><ul class=\"toc-item\"><li><span><a href=\"#Total-consonant-stats\" data-toc-modified-id=\"Total-consonant-stats-1.1\"><span class=\"toc-item-num\">1.1&nbsp;&nbsp;</span>Total consonant stats</a></span></li><li><span><a href=\"#Words-with-consonant-stats\" data-toc-modified-id=\"Words-with-consonant-stats-1.2\"><span class=\"toc-item-num\">1.2&nbsp;&nbsp;</span>Words with consonant stats</a></span></li><li><span><a href=\"#Treemap-graphs\" data-toc-modified-id=\"Treemap-graphs-1.3\"><span class=\"toc-item-num\">1.3&nbsp;&nbsp;</span>Treemap graphs</a></span></li></ul></li><li><span><a href=\"#CV-Stats\" data-toc-modified-id=\"CV-Stats-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;</span>CV Stats</a></span><ul class=\"toc-item\"><li><span><a href=\"#Load-dataset\" data-toc-modified-id=\"Load-dataset-2.1\"><span class=\"toc-item-num\">2.1&nbsp;&nbsp;</span>Load dataset</a></span></li><li><span><a href=\"#Total-syllable-stats\" data-toc-modified-id=\"Total-syllable-stats-2.2\"><span class=\"toc-item-num\">2.2&nbsp;&nbsp;</span>Total syllable stats</a></span></li><li><span><a href=\"#Words-with-syllable-stats\" data-toc-modified-id=\"Words-with-syllable-stats-2.3\"><span class=\"toc-item-num\">2.3&nbsp;&nbsp;</span>Words with syllable stats</a></span></li><li><span><a href=\"#Treemap-graphs\" data-toc-modified-id=\"Treemap-graphs-2.4\"><span class=\"toc-item-num\">2.4&nbsp;&nbsp;</span>Treemap graphs</a></span></li></ul></li></ul></div>"]},{"cell_type":"markdown","metadata":{"id":"qRa7BUjoIub3"},"source":["## Packages"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-j_TrOI2Iub3","executionInfo":{"status":"ok","timestamp":1668167490216,"user_tz":0,"elapsed":8519,"user":{"displayName":"luis trigo","userId":"06191528864502720969"}},"outputId":"cdc71b96-54f2-47cb-bb1d-a24ba1a9e8d5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting abydos\n","  Downloading abydos-0.5.0-py2.py3-none-any.whl (886 kB)\n","\u001b[K     |████████████████████████████████| 886 kB 5.0 MB/s \n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from abydos) (1.21.6)\n","Collecting deprecation\n","  Downloading deprecation-2.1.0-py2.py3-none-any.whl (11 kB)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from deprecation->abydos) (21.3)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->deprecation->abydos) (3.0.9)\n","Installing collected packages: deprecation, abydos\n","Successfully installed abydos-0.5.0 deprecation-2.1.0\n"]}],"source":["import pandas as pd\n","import re\n","import matplotlib.pyplot as plt\n","!pip install abydos\n","from abydos.phonetic import *\n","from abydos.distance import *"]},{"cell_type":"markdown","metadata":{"id":"G06dIpcoIub4"},"source":["## Load data set"]},{"cell_type":"code","execution_count":4,"metadata":{"scrolled":true,"id":"1Ih9l3-mIub5","outputId":"d9bc1f18-2496-469b-9b96-a3c486a26f88","colab":{"base_uri":"https://localhost:8080/","height":481},"executionInfo":{"status":"ok","timestamp":1668167648645,"user_tz":0,"elapsed":7641,"user":{"displayName":"luis trigo","userId":"06191528864502720969"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-6f21d1a0-d0f3-4e2c-ad39-53b3567f9d31\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-6f21d1a0-d0f3-4e2c-ad39-53b3567f9d31\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving replacement_table_timor.csv to replacement_table_timor.csv\n"]},{"output_type":"execute_result","data":{"text/plain":["         word   new_word\n","0         teŋ       tegN\n","1         boŋ       bogN\n","2       ˈuŋwa     ˈugNwa\n","3       ˈuŋwa     ˈugNwa\n","4    alguˈdaŋ  alguˈdagN\n","..        ...        ...\n","125        ri         ri\n","126     ˈkume      ˈkume\n","127     ˈkume      ˈkume\n","128     ˈsega      ˈsega\n","129     ˈsega      ˈsega\n","\n","[130 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-80d6cdd6-6f5b-47bc-8dd8-35ceabccf6f2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>word</th>\n","      <th>new_word</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>teŋ</td>\n","      <td>tegN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>boŋ</td>\n","      <td>bogN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ˈuŋwa</td>\n","      <td>ˈugNwa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ˈuŋwa</td>\n","      <td>ˈugNwa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>alguˈdaŋ</td>\n","      <td>alguˈdagN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>125</th>\n","      <td>ri</td>\n","      <td>ri</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>ˈkume</td>\n","      <td>ˈkume</td>\n","    </tr>\n","    <tr>\n","      <th>127</th>\n","      <td>ˈkume</td>\n","      <td>ˈkume</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>ˈsega</td>\n","      <td>ˈsega</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>ˈsega</td>\n","      <td>ˈsega</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>130 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80d6cdd6-6f5b-47bc-8dd8-35ceabccf6f2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-80d6cdd6-6f5b-47bc-8dd8-35ceabccf6f2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-80d6cdd6-6f5b-47bc-8dd8-35ceabccf6f2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}],"source":["from google.colab import files\n","files.upload()\n","\n","file_name = \"replacement_table_timor.csv\"\n","\n","word_df = pd.read_csv(file_name)\n","word_df"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"AC2b5egmIub5","outputId":"1107d3f9-c35b-47a5-f20c-eab4d1fe42c5","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1668167594600,"user_tz":0,"elapsed":201,"user":{"displayName":"luis trigo","userId":"06191528864502720969"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    SourceWordSyl TargetWordSyl\n","0             teŋ           teɾ\n","1             boŋ          ˈbõ\n","2          ˈuŋ.wa          u.ma\n","3          ˈuŋ.wa          u.ma\n","4      al.gu.ˈdaŋ  aɫ.gu.ˈdɐ̃w̃\n","..            ...           ...\n","125            ri          ˈʀiɾ\n","126        ˈku.me       ku.ˈmeɾ\n","127        ˈku.me       ku.ˈmeɾ\n","128        ˈse.ga       ʃɨ.ˈɡaɾ\n","129        ˈse.ga       ʃɨ.ˈɡaɾ\n","\n","[130 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-ac9af76e-babf-4dbf-a419-8a6784bccf3d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SourceWordSyl</th>\n","      <th>TargetWordSyl</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>teŋ</td>\n","      <td>teɾ</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>boŋ</td>\n","      <td>ˈbõ</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ˈuŋ.wa</td>\n","      <td>u.ma</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ˈuŋ.wa</td>\n","      <td>u.ma</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>al.gu.ˈdaŋ</td>\n","      <td>aɫ.gu.ˈdɐ̃w̃</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>125</th>\n","      <td>ri</td>\n","      <td>ˈʀiɾ</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>ˈku.me</td>\n","      <td>ku.ˈmeɾ</td>\n","    </tr>\n","    <tr>\n","      <th>127</th>\n","      <td>ˈku.me</td>\n","      <td>ku.ˈmeɾ</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>ˈse.ga</td>\n","      <td>ʃɨ.ˈɡaɾ</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>ˈse.ga</td>\n","      <td>ʃɨ.ˈɡaɾ</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>130 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac9af76e-babf-4dbf-a419-8a6784bccf3d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ac9af76e-babf-4dbf-a419-8a6784bccf3d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ac9af76e-babf-4dbf-a419-8a6784bccf3d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["df = word_df[[\"SourceWordSyl\",\"TargetWordSyl\"]]\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BjOxglidIub6","outputId":"76e07081-b330-4277-ad9e-283fd7667607"},"outputs":[{"data":{"text/plain":["(50.0, '‖ t e ‖', '‖ t e ‖')"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["cmp = ALINE()\n","cmp.alignment('teŋ', 'teɾ')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"I_pmolROIub6","outputId":"10d449eb-9f79-4d3a-cc6a-169b835a301a"},"outputs":[{"name":"stdout","output_type":"stream","text":["(50.0, '‖ t e ‖', '‖ t e ‖')\n","(50.0, '‖ b o ‖', '‖ b o ‖')\n","(30.0, '‖ uw - a ‖', '‖ u  m a ‖')\n","(30.0, '‖ uw - a ‖', '‖ u  m a ‖')\n","(92.5, '‖ a l g u d a ‖', '‖ a - g u d w ‖')\n","(92.5, '‖ a l g u d a ‖', '‖ a - g u d w ‖')\n","(92.5, '‖ a l g u d a ‖', '‖ a - g u d w ‖')\n","(75.0, '‖ k o r s a ‖', '‖ k u - s w ‖')\n","(75.0, '‖ k o r s a ‖', '‖ k u - s w ‖')\n","(75.0, '‖ k o r s a ‖', '‖ k u - s w ‖')\n","(15.0, 't ‖ u ‖ a', '‖ u ‖ v')\n","(15.0, 't ‖ u ‖ a', '‖ u ‖ v')\n","(47.5, 'ka ‖ t o  ‖ ru', '‖ k ou ‖')\n","(47.5, 'ka ‖ t o  ‖ ru', '‖ k ou ‖')\n","(47.5, 'ka ‖ t o  ‖ ru', '‖ k ou ‖')\n","(23.000000000000004, 'te ‖ r u ‖', '‖ j u ‖')\n","(23.000000000000004, 'te ‖ r u ‖', '‖ j u ‖')\n","(67.5, 'nt ‖ i  d u ‖', '‖ ei d u ‖')\n","(67.5, 'nt ‖ i  d u ‖', '‖ ei d u ‖')\n","(67.5, 'nt ‖ i  d u ‖', '‖ ei d u ‖')\n","(15.0, 'd ‖ a ‖', '‖ a ‖')\n","(40.0, 'd ‖ e n t ‖ i', '‖ e - t ‖')\n","(40.0, 'd ‖ e n t ‖ i', '‖ e - t ‖')\n","(105.0, 'd ‖ u n t a d u ‖', '‖ u - t a d u ‖')\n","(105.0, 'd ‖ u n t a d u ‖', '‖ u - t a d u ‖')\n","(105.0, 'd ‖ u n t a d u ‖', '‖ u - t a d u ‖')\n","(70.0, '‖ p e s ‖ i', '‖ p e j ‖')\n","(70.0, '‖ p e s ‖ i', '‖ p e j ‖')\n","(7.5, 'z ‖ i ‖', '‖ o ‖')\n","(7.5, 'z ‖ i ‖', '‖ o ‖')\n","(55.0, '‖ m i z a ‖', '‖ m i - a ‖')\n","(55.0, '‖ m i z a ‖', '‖ m i - a ‖')\n","(70.0, '‖ k e z u ‖', '‖ k - j u ‖')\n","(70.0, '‖ k e z u ‖', '‖ k - j u ‖')\n","(60.0, '‖ s u  ‖ zu', '‖ s uu ‖')\n","(60.0, '‖ s u  ‖ zu', '‖ s uu ‖')\n","(65.0, '‖ k a r e t ‖ a', '‖ k - - e t ‖')\n","(65.0, '‖ k a r e t ‖ a', '‖ k - - e t ‖')\n","(65.0, '‖ k a r e t ‖ a', '‖ k - - e t ‖')\n","(37.5, '‖ f e ‖ ru', '‖ f u ‖')\n","(37.5, '‖ f e ‖ ru', '‖ f u ‖')\n","(65.0, '‖ b a r i g ‖ a', '‖ b - - i g ‖')\n","(65.0, '‖ b a r i g ‖ a', '‖ b - - i g ‖')\n","(65.0, '‖ b a r i g ‖ a', '‖ b - - i g ‖')\n","(50.0, '‖ t u ‖', 'o ‖ t u ‖')\n","(50.0, '‖ t u ‖', 'o ‖ t u ‖')\n","(52.5, '‖ k r a n s ‖ a', '‖ k - i - s ‖')\n","(52.5, '‖ k r a n s ‖ a', '‖ k - i - s ‖')\n","(52.5, '‖ k r a n s ‖ a', '‖ k - i - s ‖')\n","(18.0, '‖ b ‖ ra', '‖ v ‖')\n","(18.0, '‖ b ‖ ra', '‖ v ‖')\n","(68.0, '‖ b a k ‖ a', '‖ v a k ‖')\n","(68.0, '‖ b a k ‖ a', '‖ v a k ‖')\n","(48.0, '‖ o b i ‖', '‖ o v i ‖')\n","(48.0, '‖ o b i ‖', '‖ o v i ‖')\n","(33.0, '‖ b u ‖', 'o ‖ v u ‖')\n","(33.0, '‖ b u ‖', 'o ‖ v u ‖')\n","(83.0, '‖ n o b u ‖', '‖ n o v u ‖')\n","(83.0, '‖ n o b u ‖', '‖ n o v u ‖')\n","(65.0, 'a ‖ z  e t ‖ i', '‖ zj - t ‖')\n","(65.0, 'a ‖ z  e t ‖ i', '‖ zj - t ‖')\n","(65.0, 'a ‖ z  e t ‖ i', '‖ zj - t ‖')\n","(95.0, '‖ p e t  u ‖', '‖ p e jt u ‖')\n","(95.0, '‖ p e t  u ‖', '‖ p e jt u ‖')\n","(60.0, '‖ b e s u ‖', '‖ b - j u ‖')\n","(60.0, '‖ b e s u ‖', '‖ b - j u ‖')\n","(55.0, '‖ l e t  ‖ i', '‖ l - jt ‖')\n","(55.0, '‖ l e t  ‖ i', '‖ l - jt ‖')\n","(50.0, '‖ m u ‖ jr', '‖ m u ‖')\n","(50.0, '‖ m u ‖ jr', '‖ m u ‖')\n","(22.5, 'j ‖ u  ‖', '‖ ou ‖')\n","(22.5, 'j ‖ u  ‖', '‖ ou ‖')\n","(50.0, '‖ d a ‖ di', '‖ d a ‖')\n","(50.0, '‖ d a ‖ di', '‖ d a ‖')\n","(15.0, 'j ‖ a ‖', '‖ a ‖')\n","(15.0, 'j ‖ a ‖', '‖ a ‖')\n","(20.0, '‖ a j u ‖', '‖ a - u ‖')\n","(20.0, '‖ a j u ‖', '‖ a - u ‖')\n","(30.0, '‖ e u ‖', '‖ e w ‖')\n","(18.0, '‖ b ‖ os', '‖ v ‖')\n","(50.0, '‖ e l ‖ i', '‖ e l ‖')\n","(50.0, '‖ e l ‖ i', '‖ e l ‖')\n","(35.0, '‖ n ‖ os', '‖ n ‖')\n","(18.0, '‖ b ‖ os', '‖ v ‖')\n","(85.0, '‖ n u k ‖ a', '‖ n u k ‖')\n","(85.0, '‖ n u k ‖ a', '‖ n u k ‖')\n","(85.0, '‖ n u n t e ‖', '‖ n w - t a ‖ j')\n","(85.0, '‖ n u n t e ‖', '‖ n w - t a ‖ j')\n","(100.0, '‖ n u m p o d ‖ i', '‖ n w - p - d ‖')\n","(100.0, '‖ n u m p o d ‖ i', '‖ n w - p - d ‖')\n","(100.0, '‖ n u m p o d ‖ i', '‖ n w - p - d ‖')\n","(155.0, '‖ p u s a b a f u ‖', '‖ p u - a b a f u ‖')\n","(155.0, '‖ p u s a b a f u ‖', '‖ p u - a b a f u ‖')\n","(155.0, '‖ p u s a b a f u ‖', '‖ p u - a b a f u ‖')\n","(155.0, '‖ p u s a b a f u ‖', '‖ p u - a b a f u ‖')\n","(24.0, '‖ b ‖ e', 'v ‖ j ‖')\n","(33.0, '‖ b a ‖ i', '‖ v a ‖ j')\n","(75.0, '‖ f a z e ‖', '‖ f - z e ‖')\n","(75.0, '‖ f a z e ‖', '‖ f - z e ‖')\n","(90.0, '‖ p o d i ‖', '‖ p u d e ‖')\n","(90.0, '‖ p o d i ‖', '‖ p u d e ‖')\n","(95.0, '‖ s a nd e ‖', '‖ s e d  e ‖')\n","(95.0, '‖ s a nd e ‖', '‖ s e d  e ‖')\n","(95.0, '‖ s a nd e ‖', '‖ s e d  e ‖')\n","(50.0, '‖ m a ‖ ra', '‖ m a ‖')\n","(50.0, '‖ m a ‖ ra', '‖ m a ‖')\n","(50.0, '‖ m a ‖ ra', '‖ m a ‖')\n","(75.0, '‖ p a g a ‖', '‖ p - g a ‖')\n","(75.0, '‖ p a g a ‖', '‖ p - g a ‖')\n","(75.0, '‖ p a g a ‖', '‖ p - g a ‖')\n","(100.0, '‖ f o g u ‖', '‖ f o g u ‖')\n","(100.0, '‖ f o g u ‖', '‖ f o g u ‖')\n","(90.0, '‖ p r e nd e ‖', '‖ p - e d  e ‖')\n","(90.0, '‖ p r e nd e ‖', '‖ p - e d  e ‖')\n","(90.0, '‖ b u s k a ‖', '‖ b u - k a ‖')\n","(90.0, '‖ b u s k a ‖', '‖ b u - k a ‖')\n","(97.5, '‖ b o t a ‖', '‖ b u t a ‖')\n","(97.5, '‖ b o t a ‖', '‖ b u t a ‖')\n","(47.5, '‖ s ai ‖', '‖ s i  ‖')\n","(47.5, '‖ s ai ‖', '‖ s i  ‖')\n","(40.0, '‖ l - a ‖', '‖ l v a ‖')\n","(40.0, '‖ l - a ‖', '‖ l v a ‖')\n","(90.0, '‖ k o r p u ‖', '‖ k o - p u ‖')\n","(90.0, '‖ k o r p u ‖', '‖ k o - p u ‖')\n","(15.0, 'r ‖ i ‖', '‖ i ‖')\n","(100.0, '‖ k u m e ‖', '‖ k u m e ‖')\n","(100.0, '‖ k u m e ‖', '‖ k u m e ‖')\n","(15.0, 'seg ‖ a ‖', '‖ a ‖')\n","(15.0, 'seg ‖ a ‖', '‖ a ‖')\n"]}],"source":["lst = []\n","\n","for index, row in df.iterrows():\n","    print(cmp.alignment(row[\"SourceWordSyl\"], row[\"TargetWordSyl\"]))\n","    lst.append(cmp.alignment(row[\"SourceWordSyl\"], row[\"TargetWordSyl\"])[0])"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"MuJQxYgPIub7","outputId":"1ef817d2-524b-4b4e-f4df-def504a31c28"},"outputs":[{"name":"stderr","output_type":"stream","text":["<ipython-input-6-32fdf49a304f>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['aline'] = lst\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SourceWordSyl</th>\n","      <th>TargetWordSyl</th>\n","      <th>aline</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>teŋ</td>\n","      <td>teɾ</td>\n","      <td>50.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>boŋ</td>\n","      <td>ˈbõ</td>\n","      <td>50.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ˈuŋ.wa</td>\n","      <td>u.ma</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ˈuŋ.wa</td>\n","      <td>u.ma</td>\n","      <td>30.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>al.gu.ˈdaŋ</td>\n","      <td>aɫ.gu.ˈdɐ̃w̃</td>\n","      <td>92.5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>124</th>\n","      <td>ri</td>\n","      <td>ˈʀiɾ</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>125</th>\n","      <td>ˈku.me</td>\n","      <td>ku.ˈmeɾ</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>ˈku.me</td>\n","      <td>ku.ˈmeɾ</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>127</th>\n","      <td>ˈse.ga</td>\n","      <td>ʃɨ.ˈɡaɾ</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>ˈse.ga</td>\n","      <td>ʃɨ.ˈɡaɾ</td>\n","      <td>15.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>129 rows × 3 columns</p>\n","</div>"],"text/plain":["    SourceWordSyl TargetWordSyl  aline\n","0             teŋ           teɾ   50.0\n","1             boŋ          ˈbõ   50.0\n","2          ˈuŋ.wa          u.ma   30.0\n","3          ˈuŋ.wa          u.ma   30.0\n","4      al.gu.ˈdaŋ  aɫ.gu.ˈdɐ̃w̃   92.5\n","..            ...           ...    ...\n","124            ri          ˈʀiɾ   15.0\n","125        ˈku.me       ku.ˈmeɾ  100.0\n","126        ˈku.me       ku.ˈmeɾ  100.0\n","127        ˈse.ga       ʃɨ.ˈɡaɾ   15.0\n","128        ˈse.ga       ʃɨ.ˈɡaɾ   15.0\n","\n","[129 rows x 3 columns]"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["df['aline'] = lst\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MzjaURU8Iub7","outputId":"52fe2059-bcdf-45b3-ec84-0d67c6c889bc"},"outputs":[{"name":"stdout","output_type":"stream","text":["(50.0, '‖ t e ‖', '‖ t e ‖')\n","(50.0, '‖ b o ‖', '‖ b o ‖')\n","(25.0, '‖ uw ‖ a', '‖ u  ‖ m')\n","(25.0, '‖ uw ‖ a', '‖ u  ‖ m')\n","(92.5, '‖ a l g u d a ‖', '‖ a - g u d w ‖')\n","(92.5, '‖ a l g u d a ‖', '‖ a - g u d w ‖')\n","(92.5, '‖ a l g u d a ‖', '‖ a - g u d w ‖')\n","(75.0, '‖ k o r s a ‖', '‖ k u - s w ‖')\n","(75.0, '‖ k o r s a ‖', '‖ k u - s w ‖')\n","(75.0, '‖ k o r s a ‖', '‖ k u - s w ‖')\n","(15.0, 't ‖ u ‖ a', '‖ u ‖ v')\n","(15.0, 't ‖ u ‖ a', '‖ u ‖ v')\n","(47.5, 'ka ‖ t o  ‖ ru', '‖ k ou ‖')\n","(47.5, 'ka ‖ t o  ‖ ru', '‖ k ou ‖')\n","(47.5, 'ka ‖ t o  ‖ ru', '‖ k ou ‖')\n","(23.000000000000004, 'te ‖ r u ‖', '‖ j u ‖')\n","(23.000000000000004, 'te ‖ r u ‖', '‖ j u ‖')\n","(67.5, 'nt ‖ i  d u ‖', '‖ ei d u ‖')\n","(67.5, 'nt ‖ i  d u ‖', '‖ ei d u ‖')\n","(67.5, 'nt ‖ i  d u ‖', '‖ ei d u ‖')\n","(15.0, 'd ‖ a ‖', '‖ a ‖')\n","(40.0, 'd ‖ e n t ‖ i', '‖ e - t ‖')\n","(40.0, 'd ‖ e n t ‖ i', '‖ e - t ‖')\n","(105.0, 'd ‖ u n t a d u ‖', '‖ u - t a d u ‖')\n","(105.0, 'd ‖ u n t a d u ‖', '‖ u - t a d u ‖')\n","(105.0, 'd ‖ u n t a d u ‖', '‖ u - t a d u ‖')\n","(70.0, '‖ p e s ‖ i', '‖ p e j ‖')\n","(70.0, '‖ p e s ‖ i', '‖ p e j ‖')\n","(7.5, 'z ‖ i ‖', '‖ o ‖')\n","(7.5, 'z ‖ i ‖', '‖ o ‖')\n","(55.0, '‖ m i z a ‖', '‖ m i - a ‖')\n","(55.0, '‖ m i z a ‖', '‖ m i - a ‖')\n","(70.0, '‖ k e z u ‖', '‖ k - j u ‖')\n","(70.0, '‖ k e z u ‖', '‖ k - j u ‖')\n","(60.0, '‖ s u  ‖ zu', '‖ s uu ‖')\n","(60.0, '‖ s u  ‖ zu', '‖ s uu ‖')\n","(65.0, '‖ k a r e t ‖ a', '‖ k - - e t ‖')\n","(65.0, '‖ k a r e t ‖ a', '‖ k - - e t ‖')\n","(65.0, '‖ k a r e t ‖ a', '‖ k - - e t ‖')\n","(37.5, '‖ f e ‖ ru', '‖ f u ‖')\n","(37.5, '‖ f e ‖ ru', '‖ f u ‖')\n","(65.0, '‖ b a r i g ‖ a', '‖ b - - i g ‖')\n","(65.0, '‖ b a r i g ‖ a', '‖ b - - i g ‖')\n","(65.0, '‖ b a r i g ‖ a', '‖ b - - i g ‖')\n","(50.0, '‖ t u ‖', 'o ‖ t u ‖')\n","(50.0, '‖ t u ‖', 'o ‖ t u ‖')\n","(52.5, '‖ k r a n s ‖ a', '‖ k - i - s ‖')\n","(52.5, '‖ k r a n s ‖ a', '‖ k - i - s ‖')\n","(52.5, '‖ k r a n s ‖ a', '‖ k - i - s ‖')\n","(18.0, '‖ b ‖ ra', '‖ v ‖')\n","(18.0, '‖ b ‖ ra', '‖ v ‖')\n","(68.0, '‖ b a k ‖ a', '‖ v a k ‖')\n","(68.0, '‖ b a k ‖ a', '‖ v a k ‖')\n","(48.0, '‖ o b i ‖', '‖ o v i ‖')\n","(48.0, '‖ o b i ‖', '‖ o v i ‖')\n","(33.0, '‖ b u ‖', 'o ‖ v u ‖')\n","(33.0, '‖ b u ‖', 'o ‖ v u ‖')\n","(83.0, '‖ n o b u ‖', '‖ n o v u ‖')\n","(83.0, '‖ n o b u ‖', '‖ n o v u ‖')\n","(65.0, 'a ‖ z  e t ‖ i', '‖ zj - t ‖')\n","(65.0, 'a ‖ z  e t ‖ i', '‖ zj - t ‖')\n","(65.0, 'a ‖ z  e t ‖ i', '‖ zj - t ‖')\n","(95.0, '‖ p e t  u ‖', '‖ p e jt u ‖')\n","(95.0, '‖ p e t  u ‖', '‖ p e jt u ‖')\n","(60.0, '‖ b e s u ‖', '‖ b - j u ‖')\n","(60.0, '‖ b e s u ‖', '‖ b - j u ‖')\n","(55.0, '‖ l e t  ‖ i', '‖ l - jt ‖')\n","(55.0, '‖ l e t  ‖ i', '‖ l - jt ‖')\n","(50.0, '‖ m u ‖ jr', '‖ m u ‖')\n","(50.0, '‖ m u ‖ jr', '‖ m u ‖')\n","(22.5, 'j ‖ u  ‖', '‖ ou ‖')\n","(22.5, 'j ‖ u  ‖', '‖ ou ‖')\n","(50.0, '‖ d a ‖ di', '‖ d a ‖')\n","(50.0, '‖ d a ‖ di', '‖ d a ‖')\n","(15.0, 'j ‖ a ‖', '‖ a ‖')\n","(15.0, 'j ‖ a ‖', '‖ a ‖')\n","(20.0, '‖ a j u ‖', '‖ a - u ‖')\n","(20.0, '‖ a j u ‖', '‖ a - u ‖')\n","(30.0, '‖ e u ‖', '‖ e w ‖')\n","(18.0, '‖ b ‖ os', '‖ v ‖')\n","(50.0, '‖ e l ‖ i', '‖ e l ‖')\n","(50.0, '‖ e l ‖ i', '‖ e l ‖')\n","(35.0, '‖ n ‖ os', '‖ n ‖')\n","(18.0, '‖ b ‖ os', '‖ v ‖')\n","(85.0, '‖ n u k ‖ a', '‖ n u k ‖')\n","(85.0, '‖ n u k ‖ a', '‖ n u k ‖')\n","(85.0, '‖ n u n t e ‖', '‖ n w - t a ‖ j')\n","(85.0, '‖ n u n t e ‖', '‖ n w - t a ‖ j')\n","(100.0, '‖ n u m p o d ‖ i', '‖ n w - p - d ‖')\n","(100.0, '‖ n u m p o d ‖ i', '‖ n w - p - d ‖')\n","(100.0, '‖ n u m p o d ‖ i', '‖ n w - p - d ‖')\n","(155.0, '‖ p u s a b a f u ‖', '‖ p u - a b a f u ‖')\n","(155.0, '‖ p u s a b a f u ‖', '‖ p u - a b a f u ‖')\n","(155.0, '‖ p u s a b a f u ‖', '‖ p u - a b a f u ‖')\n","(155.0, '‖ p u s a b a f u ‖', '‖ p u - a b a f u ‖')\n","(24.0, '‖ b ‖ e', 'v ‖ j ‖')\n","(33.0, '‖ b a ‖ i', '‖ v a ‖ j')\n","(75.0, '‖ f a z e ‖', '‖ f - z e ‖')\n","(75.0, '‖ f a z e ‖', '‖ f - z e ‖')\n","(90.0, '‖ p o d i ‖', '‖ p u d e ‖')\n","(90.0, '‖ p o d i ‖', '‖ p u d e ‖')\n","(95.0, '‖ s a nd e ‖', '‖ s e d  e ‖')\n","(95.0, '‖ s a nd e ‖', '‖ s e d  e ‖')\n","(95.0, '‖ s a nd e ‖', '‖ s e d  e ‖')\n","(50.0, '‖ m a ‖ ra', '‖ m a ‖')\n","(50.0, '‖ m a ‖ ra', '‖ m a ‖')\n","(50.0, '‖ m a ‖ ra', '‖ m a ‖')\n","(75.0, '‖ p a g a ‖', '‖ p - g a ‖')\n","(75.0, '‖ p a g a ‖', '‖ p - g a ‖')\n","(75.0, '‖ p a g a ‖', '‖ p - g a ‖')\n","(100.0, '‖ f o g u ‖', '‖ f o g u ‖')\n","(100.0, '‖ f o g u ‖', '‖ f o g u ‖')\n","(90.0, '‖ p r e nd e ‖', '‖ p - e d  e ‖')\n","(90.0, '‖ p r e nd e ‖', '‖ p - e d  e ‖')\n","(90.0, '‖ b u s k a ‖', '‖ b u - k a ‖')\n","(90.0, '‖ b u s k a ‖', '‖ b u - k a ‖')\n","(97.5, '‖ b o t a ‖', '‖ b u t a ‖')\n","(97.5, '‖ b o t a ‖', '‖ b u t a ‖')\n","(47.5, '‖ s ai ‖', '‖ s i  ‖')\n","(47.5, '‖ s ai ‖', '‖ s i  ‖')\n","(40.0, '‖ l - a ‖', '‖ l v a ‖')\n","(40.0, '‖ l - a ‖', '‖ l v a ‖')\n","(90.0, '‖ k o r p u ‖', '‖ k o - p u ‖')\n","(90.0, '‖ k o r p u ‖', '‖ k o - p u ‖')\n","(15.0, 'r ‖ i ‖', '‖ i ‖')\n","(100.0, '‖ k u m e ‖', '‖ k u m e ‖')\n","(100.0, '‖ k u m e ‖', '‖ k u m e ‖')\n","(15.0, 'seg ‖ a ‖', '‖ a ‖')\n","(15.0, 'seg ‖ a ‖', '‖ a ‖')\n"]}],"source":["dfalt = word_df[[\"SourceWord\",\"TargetWord\"]]\n","lst = []\n","\n","for index, row in dfalt.iterrows():\n","    print(cmp.alignment(row[\"SourceWord\"], row[\"TargetWord\"]))\n","    lst.append(cmp.alignment(row[\"SourceWord\"], row[\"TargetWord\"])[0])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EhZvilWTIub7","outputId":"f9f5fa29-6063-4e3f-ef25-38f71bbbe565"},"outputs":[{"name":"stderr","output_type":"stream","text":["<ipython-input-8-09d5f0a05df8>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['aline2'] = lst\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SourceWordSyl</th>\n","      <th>TargetWordSyl</th>\n","      <th>aline</th>\n","      <th>aline2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>teŋ</td>\n","      <td>teɾ</td>\n","      <td>50.0</td>\n","      <td>50.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>boŋ</td>\n","      <td>ˈbõ</td>\n","      <td>50.0</td>\n","      <td>50.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ˈuŋ.wa</td>\n","      <td>u.ma</td>\n","      <td>30.0</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ˈuŋ.wa</td>\n","      <td>u.ma</td>\n","      <td>30.0</td>\n","      <td>25.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>al.gu.ˈdaŋ</td>\n","      <td>aɫ.gu.ˈdɐ̃w̃</td>\n","      <td>92.5</td>\n","      <td>92.5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>124</th>\n","      <td>ri</td>\n","      <td>ˈʀiɾ</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>125</th>\n","      <td>ˈku.me</td>\n","      <td>ku.ˈmeɾ</td>\n","      <td>100.0</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>ˈku.me</td>\n","      <td>ku.ˈmeɾ</td>\n","      <td>100.0</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>127</th>\n","      <td>ˈse.ga</td>\n","      <td>ʃɨ.ˈɡaɾ</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>ˈse.ga</td>\n","      <td>ʃɨ.ˈɡaɾ</td>\n","      <td>15.0</td>\n","      <td>15.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>129 rows × 4 columns</p>\n","</div>"],"text/plain":["    SourceWordSyl TargetWordSyl  aline  aline2\n","0             teŋ           teɾ   50.0    50.0\n","1             boŋ          ˈbõ   50.0    50.0\n","2          ˈuŋ.wa          u.ma   30.0    25.0\n","3          ˈuŋ.wa          u.ma   30.0    25.0\n","4      al.gu.ˈdaŋ  aɫ.gu.ˈdɐ̃w̃   92.5    92.5\n","..            ...           ...    ...     ...\n","124            ri          ˈʀiɾ   15.0    15.0\n","125        ˈku.me       ku.ˈmeɾ  100.0   100.0\n","126        ˈku.me       ku.ˈmeɾ  100.0   100.0\n","127        ˈse.ga       ʃɨ.ˈɡaɾ   15.0    15.0\n","128        ˈse.ga       ʃɨ.ˈɡaɾ   15.0    15.0\n","\n","[129 rows x 4 columns]"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["df['aline2'] = lst\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":183},"id":"MiF7Tr7qIub8","executionInfo":{"status":"error","timestamp":1667557045897,"user_tz":0,"elapsed":431,"user":{"displayName":"luis trigo","userId":"06191528864502720969"}},"outputId":"3b910c0e-a011-4d14-cd61-94bc0d366004"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-2c5dc9a65386>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mword_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'SourceSyl'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'TargetSyl'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mword_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtypes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'word_df' is not defined"]}],"source":["df = word_df[['SourceSyl','TargetSyl']]\n","word_df.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KnakVeHqIub8"},"outputs":[],"source":[]}],"metadata":{"hide_input":false,"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":true,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":true,"toc_position":{},"toc_section_display":true,"toc_window_display":true},"colab":{"provenance":[{"file_id":"13tt96K5QaZT4HvyyzkNaYdd9KLkHk6pu","timestamp":1668074980326}]}},"nbformat":4,"nbformat_minor":0}